/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @return {void} Do not return anything, modify head in-place instead.
 */
var reorderList = function(head) {
    let slowP = head
    let fastP = head.next
    while(fastP && fastP.next){
       slowP = slowP.next
       fastP = fastP.next.next 
    }
    let second = slowP.next
    slowP.next = null
    let prev = null
    while(second){
        temp = second.next
        second.next = prev
        prev = second
        second = temp
    }
    let first = head
    second = prev
    while(second){
        temp1 = first.next
        temp2 = second.next
        first.next = second
        second.next = temp1
        first = temp1
        second = temp2
    }
};
